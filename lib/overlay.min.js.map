{"version":3,"file":"overlay.min.js","sources":["../src/api.js","../src/events.js","../src/main.js"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * Ported and modified from ngld/OverlayPlugin\r\n * MIT License\r\n */\r\n\r\nexport default class RawAPI {\r\n  /**\r\n   * Init API\r\n   * @constructor\r\n   * @param {String} queue - Message queue before OverlayPluginApi is ready\r\n   * @param {Boolean} apiStatus - OverlayPluginApi init status\r\n   * @param {Object} subscribers - All subscribers for events emitted by OverlayPluginApi\r\n   */\r\n  constructor() {\r\n    this.queue = [];\r\n    this.apiStatus = false;\r\n    this.subscribers = {}; // { eventName: callbackFunc }\r\n    // Check if in WebSocket mode\r\n    this.wsURL = /[\\?&]OVERLAY_WS=([^&]+)/.exec(window.location.href);\r\n    if (this.wsURL) {\r\n      this.ws = null;\r\n      this.responsePromises = {};\r\n      this.initWS();\r\n    } else {\r\n      this.initAPI();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init OverlayPluginApi connection\r\n   */\r\n  initAPI() {\r\n    if (!window.OverlayPluginApi || !window.OverlayPluginApi.ready) {\r\n      setTimeout(this.initAPI, 200);\r\n      return;\r\n    }\r\n    // API loaded\r\n    this.apiStatus = true;\r\n    // Bind `this` for callback function called by OverlayAPI, otherwist it will turn to `undefined`\r\n    window.__OverlayCallback = this.triggerEvent.bind(this);\r\n    // Send all messages in queue to OverlayPluginApi\r\n    while (this.queue.length > 0) {\r\n      let { obj, cb } = this.queue.shift();\r\n      window.OverlayPluginApi.callHandler(JSON.stringify(obj), cb);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init WebSocket connection\r\n   */\r\n  initWS() {\r\n    this.ws = new WebSocket(this.wsURL[1]);\r\n    // Log error\r\n    this.ws.addEventListener('error', (e) => {\r\n      console.error(e);\r\n    });\r\n    // Successfully connected WebSocket\r\n    this.ws.addEventListener('open', () => {\r\n      console.info('[API] WebSocket connected');\r\n      this.apiStatus = true;\r\n      while (this.queue.length > 0) {\r\n        let msg = this.queue.shift();\r\n        this.sendMessage(msg);\r\n      }\r\n    });\r\n    // On message loaded from WebSocket\r\n    this.ws.addEventListener('message', (msg) => {\r\n      try {\r\n        msg = JSON.parse(msg.data);\r\n      } catch (e) {\r\n        console.error('[API] WebSocket invalid message received: ', msg, e);\r\n        return;\r\n      }\r\n      if (msg.rseq !== undefined && this.responsePromises[msg.rseq]) {\r\n        this.responsePromises[msg.rseq](msg);\r\n        delete this.responsePromises[msg.rseq];\r\n      } else {\r\n        this.triggerEvent(msg);\r\n      }\r\n    });\r\n    // Connection failed\r\n    this.ws.addEventListener('close', () => {\r\n      this.apiStatus = false;\r\n      console.info('[API] WebSocket trying to reconnect...');\r\n      // Don't spam the server with retries\r\n      setTimeout(() => {\r\n        this.initWS();\r\n      }, 200);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send message to OverlayPluginApi or push into queue before its init\r\n   * @param {Object} obj - Object to send\r\n   * @param {Function} cb - Callback function\r\n   */\r\n  sendMessage(obj, cb) {\r\n    if (this.wsURL) {\r\n      if (this.apiStatus) {\r\n        try {\r\n          this.ws.send(JSON.stringify(obj));\r\n        } catch (e) {\r\n          console.error('[API] Error stringfy message: ', obj, e);\r\n          return;\r\n        }\r\n      } else {\r\n        this.queue.push(obj);\r\n      }\r\n    } else {\r\n      if (this.apiStatus) {\r\n        try {\r\n          window.OverlayPluginApi.callHandler(JSON.stringify(obj), cb);\r\n        } catch (e) {\r\n          console.error('[API] Error stringfy message: ', obj, e);\r\n          return;\r\n        }\r\n      } else {\r\n        this.queue.push({ obj, cb });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger event function, called by OverlayPluginApi, need `this` binding\r\n   * @param {Object} msg - Data from OverlayPluginApi\r\n   */\r\n  triggerEvent(msg) {\r\n    // If this event type has subscribers\r\n    if (this.subscribers[msg.type]) {\r\n      // Trigger all event's callback\r\n      for (let cb of this.subscribers[msg.type]) {\r\n        cb(msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an subscriber\r\n   * @param {String} event - Event which is to subscribe\r\n   * @param {Function} cb - Callback function\r\n   */\r\n  addOverlayListener(event, cb) {\r\n    if (!this.subscribers[event]) {\r\n      this.subscribers[event] = [];\r\n    }\r\n    this.subscribers[event].push(cb);\r\n  }\r\n\r\n  /**\r\n   * Remove an subscriber\r\n   * @param {String} event - Event which is to unsubscribe\r\n   * @param {Function} cb - Callback function\r\n   */\r\n  removeOverlayListener(event, cb) {\r\n    if (this.subscribers[event]) {\r\n      let list = this.subscribers[event];\r\n      let pos = list.indexOf(cb);\r\n      if (pos > -1) {\r\n        list.splice(pos, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start listening events\r\n   * @param {Array} events - Events which to subscribe\r\n   */\r\n  startOverlayEvents(events) {\r\n    this.sendMessage({\r\n      call: 'subscribe',\r\n      events,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function allows you to call an overlay handler.\r\n   * These handlers are declared by Event Sources (either built into OverlayPlugin or loaded through addons like Cactbot).\r\n   * @param {Object} msg\r\n   */\r\n  callOverlayHandler(msg) {\r\n    return new Promise((resolve, reject) => {\r\n      this.sendMessage(msg, (data) => {\r\n        try {\r\n          const rd = data == null ? null : JSON.parse(data);\r\n        } catch (e) {\r\n          console.error('[API] Error stringfy message: ', data, e);\r\n          return reject(e);\r\n        }\r\n        return resolve(rd);\r\n      });\r\n    });\r\n  }\r\n}\r\n","'use strict';\r\n\r\nexport default {\r\n  CombatData: [\r\n    (data) => {\r\n      console.log(data.type);\r\n    },\r\n    (data) => {\r\n      console.log(data.isActive);\r\n    },\r\n  ],\r\n  LogLine: null,\r\n  ImportedLogLines: null,\r\n  ChangeZone: (data) => {\r\n    console.log(data.type);\r\n  },\r\n  ChangePrimaryPlayer: null,\r\n  OnlineStatusChanged: null,\r\n};\r\n","'use strict';\n\nimport RawAPI from './api.js';\nimport rEvents from './events.js';\n\nexport default class OverlayAPI {\n  /**\n   * Init API\n   * @constructor\n   * @param {String} options - Message queue before OverlayPluginApi is ready\n   * @param {Object} listening - Event types which are being listened and all listeners\n   * @param {API} api - Overlay API\n   */\n  constructor(events = {}) {\n    this.events = Object.assign({}, rEvents, events);\n    this.listening = {};\n    this.api = new RawAPI();\n    // Register all events\n    for (let event in this.events) {\n      let cbs = this.events[event];\n      if (cbs) {\n        if (typeof cbs === 'function') {\n          this.add(event, cbs);\n        } else if (Array.isArray(cbs)) {\n          cbs.forEach((cb) => {\n            this.add(event, cb);\n          });\n        } else {\n          console.error('[API] Wrong callback settings in events:', cbs);\n        }\n      }\n    }\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} event - Event to listen\n   * @param {Function} cb - Callback function\n   */\n  add(event, cb) {\n    if (typeof cb !== 'function') {\n      console.error('[API] Wrong params:', cb);\n      return;\n    }\n    this.api.addOverlayListener(event, cb);\n    if (!this.listening.hasOwnProperty(event)) {\n      this.listening[event] = [];\n      this.api.startOverlayEvents([event]);\n    }\n    this.listening[event].push(cb);\n  }\n\n  /**\n   * Remove a listener\n   * @param {String} event - Event type which listener belongs to\n   * @param {Function|Number} id - Function or number which listener to remove\n   */\n  remove(event, id) {\n    // Get cb\n    let cb;\n    if (typeof id === 'function') {\n      cb = id;\n    } else if (typeof id === 'number') {\n      cb = this.listening[event][id];\n      if (cb) {\n        this.listening[event].splice(id, 1);\n      }\n    } else {\n      console.error('[API] Wrong params:', id);\n      return;\n    }\n    // Remove listener\n    if (cb) {\n      this.api.removeOverlayListener(event, cb);\n    }\n  }\n\n  /**\n   * Remove all listener of one event type\n   * @param {String} event - Event type which listener belongs to\n   */\n  removeAll(event) {\n    if (this.listening[event] && this.listening[event].length > 0) {\n      this.listening[event].forEach((cb) => {\n        this.api.removeOverlayListener(event, cb);\n      });\n      this.listening[event] = [];\n    }\n  }\n\n  /**\n   * List all event listeners\n   */\n  list() {\n    console.log(this.listening);\n  }\n\n  /**\n   * This function allows you to call an overlay handler.\n   * These handlers are declared by Event Sources (either built into OverlayPlugin or loaded through addons like Cactbot).\n   * Returns a Promise\n   * @param {Object} msg\n   */\n  call(msg) {\n    return this.api.callOverlayHandler(msg);\n  }\n}\n"],"names":["RawAPI","constructor","queue","apiStatus","subscribers","wsURL","exec","window","location","href","this","ws","responsePromises","initWS","initAPI","OverlayPluginApi","ready","__OverlayCallback","triggerEvent","bind","length","obj","cb","shift","callHandler","JSON","stringify","setTimeout","WebSocket","addEventListener","e","console","error","info","msg","sendMessage","parse","data","undefined","rseq","send","push","type","addOverlayListener","event","removeOverlayListener","list","pos","indexOf","splice","startOverlayEvents","events","call","callOverlayHandler","Promise","resolve","reject","rd","CombatData","log","isActive","LogLine","ImportedLogLines","ChangeZone","ChangePrimaryPlayer","OnlineStatusChanged","Object","assign","rEvents","listening","api","cbs","_this","add","Array","isArray","forEach","hasOwnProperty","remove","id","removeAll"],"mappings":"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"}