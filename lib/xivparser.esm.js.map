{"version":3,"file":"xivparser.esm.js","sources":["../src/api.js","../src/main.js"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * Ported from https://github.com/ngld/OverlayPlugin/blob/master/docs/assets/shared/common.js\r\n * MIT License\r\n */\r\n\r\nexport default class OverlayAPI {\r\n  /**\r\n   * Init API\r\n   * @constructor\r\n   * @param {String} queue - Message queue before OverlayPluginApi is ready\r\n   * @param {Boolean} apiStatus - OverlayPluginApi init status\r\n   * @param {Object} subscribers - All subscribers for events emitted by OverlayPluginApi\r\n   */\r\n  constructor() {\r\n    this.queue = [];\r\n    this.apiStatus = false;\r\n    this.subscribers = {}; // { eventName: callbackFunc }\r\n    // Check if in WebSocket mode\r\n    this.wsURL = /[\\?&]OVERLAY_WS=([^&]+)/.exec(this.url);\r\n    if (this.wsURL) {\r\n      this.ws = null;\r\n      this.responsePromises = {};\r\n      this.initWS();\r\n    } else {\r\n      this.initAPI();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init OverlayPluginApi connection\r\n   */\r\n  initAPI() {\r\n    if (!window.OverlayPluginApi || !window.OverlayPluginApi.ready) {\r\n      setTimeout(this.initAPI, 200);\r\n      return;\r\n    }\r\n    // API loaded\r\n    let tempQueue = this.queue;\r\n    this.queue.length = 0;\r\n    this.apiStatus = true;\r\n    // Bind `this` for callback function called by OverlayAPI, otherwist it will turn to `undefined`\r\n    window.__OverlayCallback = this.triggerEvent.bind(this);\r\n    // Send all messages in queue to OverlayPluginApi\r\n    for (let { obj, cb } of tempQueue) {\r\n      window.OverlayPluginApi.callHandler(JSON.stringify(obj), cb);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Init WebSocket connection\r\n   */\r\n  initWS() {\r\n    ws = new WebSocket(this.wsURL[1]);\r\n    // Log error\r\n    ws.addEventListener('error', (e) => {\r\n      console.error(e);\r\n    });\r\n    // Successfully connected WebSocket\r\n    ws.addEventListener('open', () => {\r\n      console.log('[API] WebSocket connected');\r\n      let tempQueue = this.queue;\r\n      this.queue.length = 0;\r\n      this.apiStatus = true;\r\n      for (let msg of tempQueue) {\r\n        this.sendMessage(msg);\r\n      }\r\n    });\r\n    // On message loaded from WebSocket\r\n    ws.addEventListener('message', (msg) => {\r\n      try {\r\n        msg = JSON.parse(msg.data);\r\n      } catch (e) {\r\n        console.error('[API] Invalid message received: ', msg);\r\n        return;\r\n      }\r\n      if (msg.rseq !== undefined && this.responsePromises[msg.rseq]) {\r\n        this.responsePromises[msg.rseq](msg);\r\n        delete this.responsePromises[msg.rseq];\r\n      } else {\r\n        this.triggerEvent(msg);\r\n      }\r\n    });\r\n    // Connection failed\r\n    ws.addEventListener('close', () => {\r\n      this.apiStatus = false;\r\n      console.log('[API] Trying to reconnect...');\r\n      // Don't spam the server with retries\r\n      setTimeout(() => {\r\n        this.initWS();\r\n      }, 200);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Send message to OverlayPluginApi or push into queue before its init\r\n   * @param {Object} obj - Object to send\r\n   * @param {Function} cb - Callback function\r\n   */\r\n  sendMessage(obj, cb) {\r\n    if (this.wsURL) {\r\n      if (this.apiStatus) {\r\n        ws.send(JSON.stringify(obj));\r\n      } else {\r\n        this.queue.push(obj);\r\n      }\r\n    } else {\r\n      if (this.apiStatus) {\r\n        window.OverlayPluginApi.callHandler(JSON.stringify(obj), cb);\r\n      } else {\r\n        this.queue.push({ obj, cb });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger event function, called by OverlayPluginApi, need `this` binding\r\n   * @param {Object} msg - Data from OverlayPluginApi\r\n   */\r\n  triggerEvent(msg) {\r\n    // If this event type has subscribers\r\n    if (this.subscribers[msg.type]) {\r\n      // Trigger all event's callback\r\n      for (let cb of this.subscribers[msg.type]) {\r\n        cb(msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an subscriber\r\n   * @param {String} event - Event which is to subscribe\r\n   * @param {Function} cb - Callback function\r\n   */\r\n  addOverlayListener(event, cb) {\r\n    if (!this.subscribers[event]) {\r\n      this.subscribers[event] = [];\r\n    }\r\n    this.subscribers[event].push(cb);\r\n  }\r\n\r\n  /**\r\n   * Remove an subscriber\r\n   * @param {String} event - Event which is to unsubscribe\r\n   * @param {Function} cb - Callback function\r\n   */\r\n  removeOverlayListener(event, cb) {\r\n    if (this.subscribers[event]) {\r\n      let list = this.subscribers[event];\r\n      let pos = list.indexOf(cb);\r\n      if (pos > -1) list.splice(pos, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start listening events\r\n   */\r\n  startOverlayEvents() {\r\n    this.sendMessage({\r\n      call: 'subscribe',\r\n      events: Object.keys(this.subscribers),\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This function allows you to call an overlay handler.\r\n   * These handlers are declared by Event Sources (either built into OverlayPlugin or loaded through addons like Cactbot).\r\n   * @param {Object} msg\r\n   */\r\n  callOverlayHandler(msg) {\r\n    return new Promise((resolve) => {\r\n      this.sendMessage(msg, (data) => {\r\n        resolve(data == null ? null : JSON.parse(data));\r\n      });\r\n    });\r\n  }\r\n}\r\n","'use strict';\n\nimport OverlayAPI from './api.js';\n\nexport default class OverlayParser {\n  /**\n   * Init parser data\n   * @constructor\n   */\n  constructor() {\n    this.api = new OverlayAPI();\n  }\n}\n"],"names":["OverlayAPI","constructor","queue","apiStatus","subscribers","wsURL","exec","url","ws","responsePromises","initWS","initAPI","window","OverlayPluginApi","ready","setTimeout","tempQueue","length","__OverlayCallback","triggerEvent","bind","obj","cb","callHandler","JSON","stringify","WebSocket","addEventListener","e","console","error","log","msg","sendMessage","parse","data","rseq","undefined","send","push","type","addOverlayListener","event","removeOverlayListener","list","pos","indexOf","splice","startOverlayEvents","call","events","Object","keys","callOverlayHandler","Promise","resolve","OverlayParser","api"],"mappings":"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"}