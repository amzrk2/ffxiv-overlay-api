/*!
 * ffxiv-overlay-api v1.0.4 - MIT License
 * Copyright (c) 2020 DSRKafuU <amzrk2.cc>
 * Copyright (c) 2014 RainbowMage, hibiyasleep, ngld
 */

!function(s,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(s="undefined"!=typeof globalThis?globalThis:s||self).OverlayAPI=e()}(this,(function(){"use strict";var s={CombatData:null,LogLine:null,ImportedLogLines:null,ChangeZone:null,ChangePrimaryPlayer:null,OnlineStatusChanged:null};return class extends class{constructor(){this.queue=[],this.apiStatus=!1,this.subscribers={},this.wsURL=/[?&]OVERLAY_WS=([^&]+)/.exec(window.location.href),this.wsURL?(this.ws=null,this.responsePromises={},this.initWS()):this.initAPI()}initAPI(){if(window.OverlayPluginApi&&window.OverlayPluginApi.ready)for(this.apiStatus=!0,window.__OverlayCallback=this.triggerEvents.bind(this);this.queue.length>0;){var{obj:s,cb:e}=this.queue.shift();window.OverlayPluginApi.callHandler(JSON.stringify(s),e)}else setTimeout(this.initAPI,200)}initWS(){this.ws=new WebSocket(this.wsURL[1]),this.ws.addEventListener("error",s=>{console.error(s)}),this.ws.addEventListener("open",()=>{for(console.info("[API] WebSocket connected"),this.apiStatus=!0;this.queue.length>0;){var s=this.queue.shift();this.sendMessage(s)}}),this.ws.addEventListener("message",s=>{try{s=JSON.parse(s.data)}catch(e){return void console.error("[API] WebSocket invalid message received: ",s,e)}void 0!==s.rseq&&this.responsePromises[s.rseq]?(this.responsePromises[s.rseq](s),delete this.responsePromises[s.rseq]):this.triggerEvents(s)}),this.ws.addEventListener("close",()=>{this.apiStatus=!1,console.info("[API] WebSocket trying to reconnect..."),setTimeout(()=>{this.initWS()},200)})}sendMessage(s,e){if(this.wsURL)if(this.apiStatus)try{this.ws.send(JSON.stringify(s))}catch(e){return void console.error("[API] Error stringfy message: ",s,e)}else this.queue.push(s);else if(this.apiStatus)try{window.OverlayPluginApi.callHandler(JSON.stringify(s),e)}catch(e){return void console.error("[API] Error stringfy message: ",s,e)}else this.queue.push({obj:s,cb:e})}triggerEvents(s){if(this.subscribers[s.type])for(var e of this.subscribers[s.type])e(s)}}{constructor(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};for(var i in super(),this.events=Object.assign({},s,e),this.events){var t=this.events[i];t&&this.add(i,t)}}listenEvents(s){this.sendMessage({call:"subscribe",events:s})}add(s,e){var i=this.subscribers.hasOwnProperty(s);if(i||(this.subscribers[s]=[]),"function"==typeof e)this.subscribers[s].push(e);else{if(!Array.isArray(e))return void console.error("[API] Wrong params:",e);e.forEach(e=>{this.subscribers[s].push(e)})}i||this.listenEvents([s])}remove(s,e){if(this.subscribers.hasOwnProperty(s))if("function"==typeof e){this.subscribers[s].indexOf(e)>=0&&this.subscribers[s].splice(pos,1)}else{if("number"!=typeof e)return void console.error("[API] Wrong params:",e);this.subscribers[s][e]&&this.subscribers[s].splice(e,1)}}removeAll(s){this.subscribers[s]&&this.subscribers[s].length>0&&(this.subscribers[s]=[])}list(){console.log(this.subscribers)}call(s){return new Promise((e,i)=>{this.sendMessage(s,s=>{var t;try{t=null==s?null:JSON.parse(s)}catch(e){return console.error("[API] Error stringfy message: ",s,e),i(e)}return e(t)})})}}}));
